// Generated by gencpp from file ersow_comm/data_agent0.msg
// DO NOT EDIT!


#ifndef ERSOW_COMM_MESSAGE_DATA_AGENT0_H
#define ERSOW_COMM_MESSAGE_DATA_AGENT0_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace ersow_comm
{
template <class ContainerAllocator>
struct data_agent0_
{
  typedef data_agent0_<ContainerAllocator> Type;

  data_agent0_()
    : agent0_value(0)
    , agent0_state_okto(0)
    , agent0_mode_okto(0)
    , agent0_state_hendro(0)
    , agent0_mode_hendro(0)
    , agent0_state_jamil(0)
    , agent0_mode_jamil(0)
    , agent0_targetx_okto(0)
    , agent0_targety_okto(0)
    , agent0_targett_okto(0)
    , agent0_targetx_hendro(0)
    , agent0_targety_hendro(0)
    , agent0_targett_hendro(0)
    , agent0_targetx_jamil(0)
    , agent0_targety_jamil(0)
    , agent0_targett_jamil(0)
    , agent0_ballx(0)
    , agent0_bally(0)
    , agent0_ball_detected(0)
    , agent0_localization_flag(0)
    , agent0_localization_posx(0)
    , agent0_localization_posy(0)
    , agent0_localization_post(0)
    , agent0_pass(0)
    , agent0_condition(0)  {
    }
  data_agent0_(const ContainerAllocator& _alloc)
    : agent0_value(0)
    , agent0_state_okto(0)
    , agent0_mode_okto(0)
    , agent0_state_hendro(0)
    , agent0_mode_hendro(0)
    , agent0_state_jamil(0)
    , agent0_mode_jamil(0)
    , agent0_targetx_okto(0)
    , agent0_targety_okto(0)
    , agent0_targett_okto(0)
    , agent0_targetx_hendro(0)
    , agent0_targety_hendro(0)
    , agent0_targett_hendro(0)
    , agent0_targetx_jamil(0)
    , agent0_targety_jamil(0)
    , agent0_targett_jamil(0)
    , agent0_ballx(0)
    , agent0_bally(0)
    , agent0_ball_detected(0)
    , agent0_localization_flag(0)
    , agent0_localization_posx(0)
    , agent0_localization_posy(0)
    , agent0_localization_post(0)
    , agent0_pass(0)
    , agent0_condition(0)  {
  (void)_alloc;
    }



   typedef int32_t _agent0_value_type;
  _agent0_value_type agent0_value;

   typedef uint16_t _agent0_state_okto_type;
  _agent0_state_okto_type agent0_state_okto;

   typedef uint16_t _agent0_mode_okto_type;
  _agent0_mode_okto_type agent0_mode_okto;

   typedef uint16_t _agent0_state_hendro_type;
  _agent0_state_hendro_type agent0_state_hendro;

   typedef uint16_t _agent0_mode_hendro_type;
  _agent0_mode_hendro_type agent0_mode_hendro;

   typedef uint16_t _agent0_state_jamil_type;
  _agent0_state_jamil_type agent0_state_jamil;

   typedef uint16_t _agent0_mode_jamil_type;
  _agent0_mode_jamil_type agent0_mode_jamil;

   typedef uint16_t _agent0_targetx_okto_type;
  _agent0_targetx_okto_type agent0_targetx_okto;

   typedef uint16_t _agent0_targety_okto_type;
  _agent0_targety_okto_type agent0_targety_okto;

   typedef uint16_t _agent0_targett_okto_type;
  _agent0_targett_okto_type agent0_targett_okto;

   typedef uint16_t _agent0_targetx_hendro_type;
  _agent0_targetx_hendro_type agent0_targetx_hendro;

   typedef uint16_t _agent0_targety_hendro_type;
  _agent0_targety_hendro_type agent0_targety_hendro;

   typedef uint16_t _agent0_targett_hendro_type;
  _agent0_targett_hendro_type agent0_targett_hendro;

   typedef uint16_t _agent0_targetx_jamil_type;
  _agent0_targetx_jamil_type agent0_targetx_jamil;

   typedef uint16_t _agent0_targety_jamil_type;
  _agent0_targety_jamil_type agent0_targety_jamil;

   typedef uint16_t _agent0_targett_jamil_type;
  _agent0_targett_jamil_type agent0_targett_jamil;

   typedef uint16_t _agent0_ballx_type;
  _agent0_ballx_type agent0_ballx;

   typedef uint16_t _agent0_bally_type;
  _agent0_bally_type agent0_bally;

   typedef uint16_t _agent0_ball_detected_type;
  _agent0_ball_detected_type agent0_ball_detected;

   typedef uint16_t _agent0_localization_flag_type;
  _agent0_localization_flag_type agent0_localization_flag;

   typedef uint16_t _agent0_localization_posx_type;
  _agent0_localization_posx_type agent0_localization_posx;

   typedef uint16_t _agent0_localization_posy_type;
  _agent0_localization_posy_type agent0_localization_posy;

   typedef uint16_t _agent0_localization_post_type;
  _agent0_localization_post_type agent0_localization_post;

   typedef uint8_t _agent0_pass_type;
  _agent0_pass_type agent0_pass;

   typedef uint8_t _agent0_condition_type;
  _agent0_condition_type agent0_condition;





  typedef boost::shared_ptr< ::ersow_comm::data_agent0_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ersow_comm::data_agent0_<ContainerAllocator> const> ConstPtr;

}; // struct data_agent0_

typedef ::ersow_comm::data_agent0_<std::allocator<void> > data_agent0;

typedef boost::shared_ptr< ::ersow_comm::data_agent0 > data_agent0Ptr;
typedef boost::shared_ptr< ::ersow_comm::data_agent0 const> data_agent0ConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ersow_comm::data_agent0_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ersow_comm::data_agent0_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ersow_comm

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'ersow_comm': ['/home/khoirlnwar/COMM_workspace/src/ersow_comm/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ersow_comm::data_agent0_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ersow_comm::data_agent0_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ersow_comm::data_agent0_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ersow_comm::data_agent0_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ersow_comm::data_agent0_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ersow_comm::data_agent0_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ersow_comm::data_agent0_<ContainerAllocator> >
{
  static const char* value()
  {
    return "392f246593b0cd645a002aefd8084841";
  }

  static const char* value(const ::ersow_comm::data_agent0_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x392f246593b0cd64ULL;
  static const uint64_t static_value2 = 0x5a002aefd8084841ULL;
};

template<class ContainerAllocator>
struct DataType< ::ersow_comm::data_agent0_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ersow_comm/data_agent0";
  }

  static const char* value(const ::ersow_comm::data_agent0_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ersow_comm::data_agent0_<ContainerAllocator> >
{
  static const char* value()
  {
    return "int32 agent0_value\n\
\n\
uint16 agent0_state_okto\n\
uint16 agent0_mode_okto\n\
\n\
uint16 agent0_state_hendro\n\
uint16 agent0_mode_hendro\n\
\n\
uint16 agent0_state_jamil\n\
uint16 agent0_mode_jamil\n\
\n\
uint16 agent0_targetx_okto\n\
uint16 agent0_targety_okto\n\
uint16 agent0_targett_okto\n\
\n\
uint16 agent0_targetx_hendro\n\
uint16 agent0_targety_hendro\n\
uint16 agent0_targett_hendro\n\
\n\
uint16 agent0_targetx_jamil\n\
uint16 agent0_targety_jamil\n\
uint16 agent0_targett_jamil\n\
\n\
uint16 agent0_ballx\n\
uint16 agent0_bally\n\
uint16 agent0_ball_detected\n\
\n\
\n\
uint16 agent0_localization_flag\n\
uint16 agent0_localization_posx\n\
uint16 agent0_localization_posy\n\
uint16 agent0_localization_post\n\
\n\
uint8 agent0_pass\n\
uint8 agent0_condition\n\
";
  }

  static const char* value(const ::ersow_comm::data_agent0_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ersow_comm::data_agent0_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.agent0_value);
      stream.next(m.agent0_state_okto);
      stream.next(m.agent0_mode_okto);
      stream.next(m.agent0_state_hendro);
      stream.next(m.agent0_mode_hendro);
      stream.next(m.agent0_state_jamil);
      stream.next(m.agent0_mode_jamil);
      stream.next(m.agent0_targetx_okto);
      stream.next(m.agent0_targety_okto);
      stream.next(m.agent0_targett_okto);
      stream.next(m.agent0_targetx_hendro);
      stream.next(m.agent0_targety_hendro);
      stream.next(m.agent0_targett_hendro);
      stream.next(m.agent0_targetx_jamil);
      stream.next(m.agent0_targety_jamil);
      stream.next(m.agent0_targett_jamil);
      stream.next(m.agent0_ballx);
      stream.next(m.agent0_bally);
      stream.next(m.agent0_ball_detected);
      stream.next(m.agent0_localization_flag);
      stream.next(m.agent0_localization_posx);
      stream.next(m.agent0_localization_posy);
      stream.next(m.agent0_localization_post);
      stream.next(m.agent0_pass);
      stream.next(m.agent0_condition);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct data_agent0_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ersow_comm::data_agent0_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ersow_comm::data_agent0_<ContainerAllocator>& v)
  {
    s << indent << "agent0_value: ";
    Printer<int32_t>::stream(s, indent + "  ", v.agent0_value);
    s << indent << "agent0_state_okto: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_state_okto);
    s << indent << "agent0_mode_okto: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_mode_okto);
    s << indent << "agent0_state_hendro: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_state_hendro);
    s << indent << "agent0_mode_hendro: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_mode_hendro);
    s << indent << "agent0_state_jamil: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_state_jamil);
    s << indent << "agent0_mode_jamil: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_mode_jamil);
    s << indent << "agent0_targetx_okto: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targetx_okto);
    s << indent << "agent0_targety_okto: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targety_okto);
    s << indent << "agent0_targett_okto: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targett_okto);
    s << indent << "agent0_targetx_hendro: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targetx_hendro);
    s << indent << "agent0_targety_hendro: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targety_hendro);
    s << indent << "agent0_targett_hendro: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targett_hendro);
    s << indent << "agent0_targetx_jamil: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targetx_jamil);
    s << indent << "agent0_targety_jamil: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targety_jamil);
    s << indent << "agent0_targett_jamil: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_targett_jamil);
    s << indent << "agent0_ballx: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_ballx);
    s << indent << "agent0_bally: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_bally);
    s << indent << "agent0_ball_detected: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_ball_detected);
    s << indent << "agent0_localization_flag: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_localization_flag);
    s << indent << "agent0_localization_posx: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_localization_posx);
    s << indent << "agent0_localization_posy: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_localization_posy);
    s << indent << "agent0_localization_post: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.agent0_localization_post);
    s << indent << "agent0_pass: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.agent0_pass);
    s << indent << "agent0_condition: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.agent0_condition);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ERSOW_COMM_MESSAGE_DATA_AGENT0_H
